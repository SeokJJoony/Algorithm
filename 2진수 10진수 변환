#include <stdio.h>
#include <math.h>

void main()
{
	int T[8] = { 1,1,1,1,0,1,1,0 };
	int C[8] = { 0, };
	int D=0,SIGN=1,B,K,T1,T2;

	if (T[0] != 0)
	{
		SIGN = -1;
		B = 1;
		for (K = 7; K >= 0; K--)
		{
			C[K] = T[K] - B;
			if (T[K] != 0 || B != 1)  //감수가 발생하지 않았을 경우 Borrow값이 0이됨
				B = 0;
			C[K] = abs(C[K]);
			T[K] = 1 - C[K];
		}
	}
	for (K = 1; K <= 7; K++)
	{
		T1 = pow(2, 8 - K); //부호 비트 제외 2의 6승까지
		T2 = C[K] * T1;
		D = D + T2;
	}
	D = SIGN*D;
	printf("%d", D);
	
}
